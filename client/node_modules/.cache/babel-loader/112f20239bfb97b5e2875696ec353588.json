{"ast":null,"code":"var _jsxFileName = \"/Users/heloysatancredo/Documents/artists-instruments-boilerplate-antd/client/src/components/listItems/Instrument.js\";\nimport React, { useState } from 'react';\nimport { Card, List } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport UpdateInstrument from '../forms/UpdateInstrument';\nimport RemoveArtist from '../buttons/RemoveArtist';\n\nconst getStyles = () => ({\n  card: {\n    width: '500px'\n  }\n});\n\nconst Instrument = props => {\n  const [id] = useState(props.id);\n  const [year, setYear] = useState(props.year);\n  const [brand, setBrand] = useState(props.brand);\n  const [type, setType] = useState(props.type);\n  const [price, setPrice] = useState(props.price);\n  const [artistId, setArtistId] = useState(props.artistId);\n  const [editMode, setEditMode] = useState(false);\n  const styles = getStyles();\n\n  const fullInstrument = () => {\n    return `${props.year} ${props.brand} ${props.type} ${props.price}`;\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'firstName':\n        setFirstName(value);\n        break;\n\n      case 'lastName':\n        setLastName(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleButtonClick = () => setEditMode(!editMode);\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    key: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(UpdateArtist, {\n    id: id,\n    firstName: firstName,\n    lastName: lastName,\n    onButtonClick: handleButtonClick,\n    updateStateVariable: updateStateVariable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(EditOutlined, {\n      key: \"edit\",\n      onClick: handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(RemoveArtist, {\n      id: id,\n      firstName: firstName,\n      lastName: lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    })],\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, fullInstrument(), /*#__PURE__*/React.createElement(Card, {\n    type: \"inner\",\n    title: \"Instruments List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 25,\n      column: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, props.instruments && props.instruments.map(({\n    id,\n    year,\n    brand,\n    type,\n    price,\n    artistId\n  }) => /*#__PURE__*/React.createElement(List.Item, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Instrument, {\n    id: id,\n    year: year,\n    brand: brand,\n    type: type,\n    price: price,\n    artistId: artistId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  })))))));\n};\n\nexport default Instrument;","map":{"version":3,"sources":["/Users/heloysatancredo/Documents/artists-instruments-boilerplate-antd/client/src/components/listItems/Instrument.js"],"names":["React","useState","Card","List","EditOutlined","UpdateInstrument","RemoveArtist","getStyles","card","width","Instrument","props","id","year","setYear","brand","setBrand","type","setType","price","setPrice","artistId","setArtistId","editMode","setEditMode","styles","fullInstrument","updateStateVariable","variable","value","setFirstName","setLastName","handleButtonClick","firstName","lastName","gutter","column","instruments","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Card, List } from 'antd'\n\nimport { EditOutlined } from '@ant-design/icons'\nimport UpdateInstrument from '../forms/UpdateInstrument'\nimport RemoveArtist from '../buttons/RemoveArtist'\n\nconst getStyles = () => ({\n  card: {\n    width: '500px',\n  },\n})\n\nconst Instrument = (props) => {\n  const [id] = useState(props.id)\n  const [year, setYear] = useState(props.year)\n  const [brand, setBrand] = useState(props.brand)\n  const [type, setType] = useState(props.type)\n  const [price, setPrice] = useState(props.price)\n  const [artistId, setArtistId] = useState(props.artistId)\n  const [editMode, setEditMode] = useState(false)\n  const styles = getStyles()\n\n  const fullInstrument = () => {\n    return `${props.year} ${props.brand} ${props.type} ${props.price}`\n  }\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'firstName':\n        setFirstName(value)\n        break\n      case 'lastName':\n        setLastName(value)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleButtonClick = () => setEditMode(!editMode)\n\n  return (\n    <List.Item key={props.id}>\n      {editMode ? (\n        <UpdateArtist\n          id={id}\n          firstName={firstName}\n          lastName={lastName}\n          onButtonClick={handleButtonClick}\n          updateStateVariable={updateStateVariable}\n        />\n      ) : (\n        <Card\n          actions={[\n            <EditOutlined key='edit' onClick={handleButtonClick} />,\n            <RemoveArtist id={id} firstName={firstName} lastName={lastName} />,\n          ]}\n          style={styles.card}\n        >\n          {fullInstrument()}\n\n          <Card type='inner' title='Instruments List'>\n            <List grid={{ gutter: 25, column: 1 }}>\n              {props.instruments &&\n                props.instruments.map(\n                  ({ id, year, brand, type, price, artistId }) => (\n                    <List.Item key={id}>\n                      <Instrument\n                        id={id}\n                        year={year}\n                        brand={brand}\n                        type={type}\n                        price={price}\n                        artistId={artistId}\n                      />\n                    </List.Item>\n                  )\n                )}\n            </List>\n          </Card>\n        </Card>\n      )}\n    </List.Item>\n  )\n}\n\nexport default Instrument\n"]},"metadata":{},"sourceType":"module"}