{"ast":null,"code":"var _jsxFileName = \"/Users/heloysatancredo/Documents/artists-instruments-boilerplate-antd/client/src/components/forms/AddInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_INSTRUMENT, GET_ARTISTS_INSTRUMENTS } from '../../queries';\n\nconst AddInstrument = () => {\n  const [id] = useState(uuidv4());\n  const [addInstrument] = useMutation(ADD_INSTRUMENT);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      year,\n      brand,\n      type,\n      price,\n      artistId\n    } = values;\n    addInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addInstrument: {\n          __typename: 'Instrument',\n          id,\n          year,\n          brand,\n          type,\n          price,\n          artistId\n        }\n      },\n      update: (proxy, {\n        data: {\n          addInstrument\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: GET_ARTISTS_INSTRUMENTS\n        });\n        proxy.writeQuery({\n          query: GET_ARTISTS_INSTRUMENTS,\n          data: { ...data,\n            instruments: [...data.instruments, addInstrument]\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"add-instrument-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    size: \"large\",\n    style: {\n      marginBottom: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    rules: [{\n      required: true,\n      message: 'Please input the year of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 2018\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"brand\",\n    rules: [{\n      required: true,\n      message: 'Please input brand of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Yamaha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    rules: [{\n      required: true,\n      message: 'Please input the type of instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Keyboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: 'Please input the price of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"artistId\",\n    rules: [{\n      required: true,\n      message: 'Please input the artist id!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Add Instrument\")));\n};\n\nexport default AddInstrument;","map":{"version":3,"sources":["/Users/heloysatancredo/Documents/artists-instruments-boilerplate-antd/client/src/components/forms/AddInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","v4","uuidv4","ADD_INSTRUMENT","GET_ARTISTS_INSTRUMENTS","AddInstrument","id","addInstrument","form","useForm","forceUpdate","onFinish","values","year","brand","type","price","artistId","variables","optimisticResponse","__typename","update","proxy","data","readQuery","query","writeQuery","instruments","marginBottom","required","message","textAlign","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,SAASC,cAAT,EAAyBC,uBAAzB,QAAwD,eAAxD;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,EAAD,IAAOV,QAAQ,CAACM,MAAM,EAAP,CAArB;AACA,QAAM,CAACK,aAAD,IAAkBV,WAAW,CAACM,cAAD,CAAnC;AAEA,QAAM,CAACK,IAAD,IAASV,IAAI,CAACW,OAAL,EAAf;AACA,QAAM,GAAGC,WAAH,IAAkBd,QAAQ,EAAhC,CAL0B,CAO1B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,KAArB;AAA4BC,MAAAA;AAA5B,QAAyCL,MAA/C;AAEAL,IAAAA,aAAa,CAAC;AACZW,MAAAA,SAAS,EAAE;AACTZ,QAAAA,EADS;AAETO,QAAAA,IAFS;AAGTC,QAAAA,KAHS;AAITC,QAAAA,IAJS;AAKTC,QAAAA,KALS;AAMTC,QAAAA;AANS,OADC;AASZE,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,UAAU,EAAE,UADM;AAElBb,QAAAA,aAAa,EAAE;AACba,UAAAA,UAAU,EAAE,YADC;AAEbd,UAAAA,EAFa;AAGbO,UAAAA,IAHa;AAIbC,UAAAA,KAJa;AAKbC,UAAAA,IALa;AAMbC,UAAAA,KANa;AAObC,UAAAA;AAPa;AAFG,OATR;AAqBZI,MAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEhB,UAAAA;AAAF;AAAR,OAAR,KAAwC;AAC9C,cAAMgB,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,UAAAA,KAAK,EAAErB;AAAT,SAAhB,CAAb;AACAkB,QAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,UAAAA,KAAK,EAAErB,uBADQ;AAEfmB,UAAAA,IAAI,EAAE,EACJ,GAAGA,IADC;AAEJI,YAAAA,WAAW,EAAE,CAAC,GAAGJ,IAAI,CAACI,WAAT,EAAsBpB,aAAtB;AAFT;AAFS,SAAjB;AAOD;AA9BW,KAAD,CAAb;AAgCD,GAnCD;;AAqCA,sBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,QAAQ,EAAEG,QAJZ;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAE;AAAEiB,MAAAA,YAAY,EAAE;AAAhB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CARF,eAmBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE,CACL;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAnBF,eA2BE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE,CACL;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CA3BF,eAmCE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAnCF,eA8CE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA9CF,eAoDE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,YAAY,EAAE,IAAzB;AAA+B,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,mBACC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,QAAQ,EACN,CAACvB,IAAI,CAACwB,eAAL,CAAqB,IAArB,CAAD,IACAxB,IAAI,CAACyB,cAAL,GAAsBC,MAAtB,CAA6B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgBA,MAAM,CAACC,MAApD,EAA4DA,MALhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CApDF,CADF;AAqED,CAtHD;;AAwHA,eAAe/B,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Form, Input, Button } from 'antd'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { ADD_INSTRUMENT, GET_ARTISTS_INSTRUMENTS } from '../../queries'\n\nconst AddInstrument = () => {\n  const [id] = useState(uuidv4())\n  const [addInstrument] = useMutation(ADD_INSTRUMENT)\n\n  const [form] = Form.useForm()\n  const [, forceUpdate] = useState()\n\n  // To disable submit button at the beginning.\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  const onFinish = (values) => {\n    const { year, brand, type, price, artistId } = values\n\n    addInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId,\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addInstrument: {\n          __typename: 'Instrument',\n          id,\n          year,\n          brand,\n          type,\n          price,\n          artistId,\n        },\n      },\n      update: (proxy, { data: { addInstrument } }) => {\n        const data = proxy.readQuery({ query: GET_ARTISTS_INSTRUMENTS })\n        proxy.writeQuery({\n          query: GET_ARTISTS_INSTRUMENTS,\n          data: {\n            ...data,\n            instruments: [...data.instruments, addInstrument],\n          },\n        })\n      },\n    })\n  }\n\n  return (\n    <Form\n      form={form}\n      name='add-instrument-form'\n      layout='inline'\n      onFinish={onFinish}\n      size='large'\n      style={{ marginBottom: '40px' }}\n    >\n      <Form.Item\n        name='year'\n        rules={[\n          {\n            required: true,\n            message: 'Please input the year of the instrument!',\n          },\n        ]}\n      >\n        <Input placeholder='i.e. 2018' />\n      </Form.Item>\n      <Form.Item\n        name='brand'\n        rules={[\n          { required: true, message: 'Please input brand of the instrument!' },\n        ]}\n      >\n        <Input placeholder='i.e. Yamaha' />\n      </Form.Item>\n      <Form.Item\n        name='type'\n        rules={[\n          { required: true, message: 'Please input the type of instrument!' },\n        ]}\n      >\n        <Input placeholder='i.e. Keyboard' />\n      </Form.Item>\n      <Form.Item\n        name='price'\n        rules={[\n          {\n            required: true,\n            message: 'Please input the price of the instrument!',\n          },\n        ]}\n      >\n        <Input placeholder='i.e. 800' />\n      </Form.Item>\n      <Form.Item\n        name='artistId'\n        rules={[{ required: true, message: 'Please input the artist id!' }]}\n      >\n        <Input placeholder='i.e. 2' />\n      </Form.Item>\n      <Form.Item shouldUpdate={true} style={{ textAlign: 'center' }}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Add Instrument\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default AddInstrument\n"]},"metadata":{},"sourceType":"module"}