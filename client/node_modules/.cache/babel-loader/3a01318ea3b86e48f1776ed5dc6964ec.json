{"ast":null,"code":"var _jsxFileName = \"/Users/heloysatancredo/Documents/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { UPDATE_INSTRUMENT } from '../../queries';\n\nconst UpdateInstrument = props => {\n  const [id] = useState(props.id);\n  const [year, setYear] = useState(props.year);\n  const [brand, setBrand] = useState(props.brand);\n  const [type, setType] = useState(props.type);\n  const [price, setPrice] = useState(props.price);\n  const [artistId, setArtistId] = useState(props.artistId);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      year,\n      brand,\n      type,\n      price,\n      artistId\n    } = values;\n    updateInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addInstrument: {\n          __typename: 'Instrument',\n          id,\n          year,\n          brand,\n          type,\n          price,\n          artistId\n        }\n      }\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'year':\n        props.updateStateVariable('year', value);\n        setYear(value);\n        break;\n\n      case 'brand':\n        props.updateStateVariable('brand', value);\n        setBrand(value);\n        break;\n\n      case 'type':\n        props.updateStateVariable('type', value);\n        setType(value);\n        break;\n\n      case 'price':\n        props.updateStateVariable('price', value);\n        setPrice(value);\n        break;\n\n      case 'artistId':\n        props.updateStateVariable('artistId', value);\n        setArtistId(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"update-instrument-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      year: year,\n      brand: brand,\n      type: type,\n      price: price,\n      artistId: artistId\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    rules: [{\n      required: true,\n      message: 'Please input the year of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 2018\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"brand\",\n    rules: [{\n      required: true,\n      message: 'Please input brand of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Yamaha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    rules: [{\n      required: true,\n      message: 'Please input the type of instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Keyboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: 'Please input the price of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"artistId\",\n    rules: [{\n      required: true,\n      message: 'Please input the artist id!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Update Instrument\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"Cancel\"));\n};\n\nexport default UpdateInstrument;","map":{"version":3,"sources":["/Users/heloysatancredo/Documents/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","UPDATE_INSTRUMENT","UpdateInstrument","props","id","year","setYear","brand","setBrand","type","setType","price","setPrice","artistId","setArtistId","updateInstrument","form","useForm","forceUpdate","onFinish","values","variables","optimisticResponse","__typename","addInstrument","onButtonClick","updateStateVariable","variable","value","required","message","textAlign","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { Form, Input, Button } from 'antd'\nimport { UPDATE_INSTRUMENT } from '../../queries'\n\nconst UpdateInstrument = (props) => {\n  const [id] = useState(props.id)\n  const [year, setYear] = useState(props.year)\n  const [brand, setBrand] = useState(props.brand)\n  const [type, setType] = useState(props.type)\n  const [price, setPrice] = useState(props.price)\n  const [artistId, setArtistId] = useState(props.artistId)\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT)\n\n  const [form] = Form.useForm()\n  const [, forceUpdate] = useState()\n\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  const onFinish = (values) => {\n    const { year, brand, type, price, artistId } = values\n    updateInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId,\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addInstrument: {\n          __typename: 'Instrument',\n          id,\n          year,\n          brand,\n          type,\n          price,\n          artistId,\n        },\n      },\n    })\n    props.onButtonClick()\n  }\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'year':\n        props.updateStateVariable('year', value)\n        setYear(value)\n        break\n      case 'brand':\n        props.updateStateVariable('brand', value)\n        setBrand(value)\n        break\n      case 'type':\n        props.updateStateVariable('type', value)\n        setType(value)\n        break\n      case 'price':\n        props.updateStateVariable('price', value)\n        setPrice(value)\n        break\n      case 'artistId':\n        props.updateStateVariable('artistId', value)\n        setArtistId(value)\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      name='update-instrument-form'\n      layout='inline'\n      onFinish={onFinish}\n      initialValues={{\n        year: year,\n        brand: brand,\n        type: type,\n        price: price,\n        artistId: artistId,\n      }}\n      size='large'\n    >\n      <Form.Item\n        name='year'\n        rules={[\n          {\n            required: true,\n            message: 'Please input the year of the instrument!',\n          },\n        ]}\n      >\n        <Input placeholder='i.e. 2018' />\n      </Form.Item>\n      <Form.Item\n        name='brand'\n        rules={[\n          { required: true, message: 'Please input brand of the instrument!' },\n        ]}\n      >\n        <Input placeholder='i.e. Yamaha' />\n      </Form.Item>\n      <Form.Item\n        name='type'\n        rules={[\n          { required: true, message: 'Please input the type of instrument!' },\n        ]}\n      >\n        <Input placeholder='i.e. Keyboard' />\n      </Form.Item>\n      <Form.Item\n        name='price'\n        rules={[\n          {\n            required: true,\n            message: 'Please input the price of the instrument!',\n          },\n        ]}\n      >\n        <Input placeholder='i.e. 800' />\n      </Form.Item>\n      <Form.Item\n        name='artistId'\n        rules={[{ required: true, message: 'Please input the artist id!' }]}\n      >\n        <Input placeholder='i.e. 2' />\n      </Form.Item>\n      <Form.Item shouldUpdate={true} style={{ textAlign: 'center' }}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Update Instrument\n          </Button>\n        )}\n      </Form.Item>\n      <Button onClick={props.onButtonClick}>Cancel</Button>\n    </Form>\n  )\n}\n\nexport default UpdateInstrument\n"]},"metadata":{},"sourceType":"module"}